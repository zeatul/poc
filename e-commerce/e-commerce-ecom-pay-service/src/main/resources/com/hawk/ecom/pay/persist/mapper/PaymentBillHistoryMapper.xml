<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hawk.ecom.pay.persist.mapper.PaymentBillHistoryMapper">

	<sql id="columns">	
				id AS "id" ,
		order_code AS "orderCode" ,
		order_desc AS "orderDesc" ,
		order_body AS "orderBody" ,
		application_code AS "applicationCode" ,
		payment_bill_code AS "paymentBillCode" ,
		store_code AS "storeCode" ,
		user_code AS "userCode" ,
		total_amount AS "totalAmount" ,
		currency AS "currency" ,
		payment_bill_status AS "paymentBillStatus" ,
		payment_category_code AS "paymentCategoryCode" ,
		payment_bill_memo AS "paymentBillMemo" ,
		create_user_code AS "createUserCode" ,
		create_date AS "createDate" ,
		update_user_code AS "updateUserCode" ,
		update_date AS "updateDate" ,
		delete_user_code AS "deleteUserCode" ,
		delete_date AS "deleteDate" 
	</sql>
	
	<sql id="where">
		<trim prefix="WHERE" prefixOverrides="AND|OR">		 
			<if test="id != null"> AND id = #{id}  </if>
			<if test="orderCode != null"> AND order_code = #{orderCode}  </if>
			<if test="orderDesc != null"> AND order_desc = #{orderDesc}  </if>
			<if test="orderBody != null"> AND order_body = #{orderBody}  </if>
			<if test="applicationCode != null"> AND application_code = #{applicationCode}  </if>
			<if test="paymentBillCode != null"> AND payment_bill_code = #{paymentBillCode}  </if>
			<if test="storeCode != null"> AND store_code = #{storeCode}  </if>
			<if test="userCode != null"> AND user_code = #{userCode}  </if>
			<if test="totalAmount != null"> AND total_amount = #{totalAmount}  </if>
			<if test="currency != null"> AND currency = #{currency}  </if>
			<if test="paymentBillStatus != null"> AND payment_bill_status = #{paymentBillStatus}  </if>
			<if test="paymentCategoryCode != null"> AND payment_category_code = #{paymentCategoryCode}  </if>
			<if test="paymentBillMemo != null"> AND payment_bill_memo = #{paymentBillMemo}  </if>
			<if test="createUserCode != null"> AND create_user_code = #{createUserCode}  </if>
			<if test="createDate != null"> AND create_date = #{createDate}  </if>
			<if test="updateUserCode != null"> AND update_user_code = #{updateUserCode}  </if>
			<if test="updateDate != null"> AND update_date = #{updateDate}  </if>
			<if test="deleteUserCode != null"> AND delete_user_code = #{deleteUserCode}  </if>
			<if test="deleteDate != null"> AND delete_date = #{deleteDate}  </if>
		</trim>	
	</sql>
	
	<sql id="where_old">
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="old_id != null"> AND id = #{old_id}  </if>			
			<if test="old_orderCode != null"> AND order_code = #{old_orderCode}  </if>			
			<if test="old_orderDesc != null"> AND order_desc = #{old_orderDesc}  </if>			
			<if test="old_orderBody != null"> AND order_body = #{old_orderBody}  </if>			
			<if test="old_applicationCode != null"> AND application_code = #{old_applicationCode}  </if>			
			<if test="old_paymentBillCode != null"> AND payment_bill_code = #{old_paymentBillCode}  </if>			
			<if test="old_storeCode != null"> AND store_code = #{old_storeCode}  </if>			
			<if test="old_userCode != null"> AND user_code = #{old_userCode}  </if>			
			<if test="old_totalAmount != null"> AND total_amount = #{old_totalAmount}  </if>			
			<if test="old_currency != null"> AND currency = #{old_currency}  </if>			
			<if test="old_paymentBillStatus != null"> AND payment_bill_status = #{old_paymentBillStatus}  </if>			
			<if test="old_paymentCategoryCode != null"> AND payment_category_code = #{old_paymentCategoryCode}  </if>			
			<if test="old_paymentBillMemo != null"> AND payment_bill_memo = #{old_paymentBillMemo}  </if>			
			<if test="old_createUserCode != null"> AND create_user_code = #{old_createUserCode}  </if>			
			<if test="old_createDate != null"> AND create_date = #{old_createDate}  </if>			
			<if test="old_updateUserCode != null"> AND update_user_code = #{old_updateUserCode}  </if>			
			<if test="old_updateDate != null"> AND update_date = #{old_updateDate}  </if>			
			<if test="old_deleteUserCode != null"> AND delete_user_code = #{old_deleteUserCode}  </if>			
			<if test="old_deleteDate != null"> AND delete_date = #{old_deleteDate}  </if>			
		</trim>
	</sql>
	
	<sql id="update">
		<set>
			id = #{id},
			order_code = #{orderCode},
			order_desc = #{orderDesc},
			order_body = #{orderBody},
			application_code = #{applicationCode},
			payment_bill_code = #{paymentBillCode},
			store_code = #{storeCode},
			user_code = #{userCode},
			total_amount = #{totalAmount},
			currency = #{currency},
			payment_bill_status = #{paymentBillStatus},
			payment_category_code = #{paymentCategoryCode},
			payment_bill_memo = #{paymentBillMemo},
			create_user_code = #{createUserCode},
			create_date = #{createDate},
			update_user_code = #{updateUserCode},
			update_date = #{updateDate},
			delete_user_code = #{deleteUserCode},
			delete_date = #{deleteDate},
		</set>
	</sql>
	
	<sql id="updateWithoutNull">
		<set>
			<if test="id != null">id = #{id},</if>
			<if test="orderCode != null">order_code = #{orderCode},</if>
			<if test="orderDesc != null">order_desc = #{orderDesc},</if>
			<if test="orderBody != null">order_body = #{orderBody},</if>
			<if test="applicationCode != null">application_code = #{applicationCode},</if>
			<if test="paymentBillCode != null">payment_bill_code = #{paymentBillCode},</if>
			<if test="storeCode != null">store_code = #{storeCode},</if>
			<if test="userCode != null">user_code = #{userCode},</if>
			<if test="totalAmount != null">total_amount = #{totalAmount},</if>
			<if test="currency != null">currency = #{currency},</if>
			<if test="paymentBillStatus != null">payment_bill_status = #{paymentBillStatus},</if>
			<if test="paymentCategoryCode != null">payment_category_code = #{paymentCategoryCode},</if>
			<if test="paymentBillMemo != null">payment_bill_memo = #{paymentBillMemo},</if>
			<if test="createUserCode != null">create_user_code = #{createUserCode},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="updateUserCode != null">update_user_code = #{updateUserCode},</if>
			<if test="updateDate != null">update_date = #{updateDate},</if>
			<if test="deleteUserCode != null">delete_user_code = #{deleteUserCode},</if>
			<if test="deleteDate != null">delete_date = #{deleteDate},</if>
		</set>
	</sql>
	
	<sql id="pkwhere">
		<trim prefix="WHERE" prefixOverrides="AND">
			AND id = #{id}
		</trim>
	</sql>
	
	<select id="load"  resultType="PaymentBillHistoryDomain">
		SELECT 
		<include refid="columns" />
		FROM t_pay_payment_bill_history
		<include refid="pkwhere" />		
	</select>
	
	<select id="loadDynamic" parameterType="hashmap" resultType="PaymentBillHistoryDomain">
		SELECT 		
		<include refid="columns" />
		FROM t_pay_payment_bill_history
		<include refid="where" />
		<if test="_orderby != null">ORDER BY ${_orderby}</if>
	</select>

	<select id="count"  parameterType="hashmap" resultType="integer">
		SELECT count(1) 
		FROM t_pay_payment_bill_history
		<include refid="where" />
	</select>
	
	<select id="countByPK"  resultType="integer">
		SELECT count(1) 
		FROM t_pay_payment_bill_history
		<include refid="pkwhere" />		
	</select>
	
	<insert id="insert"  parameterType="PaymentBillHistoryDomain">
		INSERT INTO t_pay_payment_bill_history (			
				id,				
				order_code,				
				order_desc,				
				order_body,				
				application_code,				
				payment_bill_code,				
				store_code,				
				user_code,				
				total_amount,				
				currency,				
				payment_bill_status,				
				payment_category_code,				
				payment_bill_memo,				
				create_user_code,				
				create_date,				
				update_user_code,				
				update_date,				
				delete_user_code,				
				delete_date				
		)		
		VALUES (	
			#{id},
			#{orderCode},
			#{orderDesc},
			#{orderBody},
			#{applicationCode},
			#{paymentBillCode},
			#{storeCode},
			#{userCode},
			#{totalAmount},
			#{currency},
			#{paymentBillStatus},
			#{paymentCategoryCode},
			#{paymentBillMemo},
			#{createUserCode},
			#{createDate},
			#{updateUserCode},
			#{updateDate},
			#{deleteUserCode},
			#{deleteDate}
		) 
	</insert>
	
	<delete id="delete" >
		DELETE FROM t_pay_payment_bill_history
		<include refid="pkwhere" />	
	</delete>
	
	<delete id="deleteDynamic" parameterType="hashmap">
		DELETE FROM t_pay_payment_bill_history
		<include refid="where" />
	</delete>

	<update id="update" parameterType="PaymentBillHistoryDomain">
		UPDATE t_pay_payment_bill_history	
		<include refid="update" />
		<include refid="pkwhere" />	
	</update>
	
	<update id="updateWithoutNull" parameterType="PaymentBillHistoryDomain">
		UPDATE t_pay_payment_bill_history
		<include refid="updateWithoutNull"/>
		<include refid="pkwhere" />	
	</update>
	
	<update id="updateDynamicWithoutNull" parameterType="hashmap">
		UPDATE t_pay_payment_bill_history	
		<include refid="updateWithoutNull" />
		<include refid="where_old" />
	</update>
	
	<select id="loadDynamicPaging" parameterType="hashmap" resultType="PaymentBillHistoryDomain">
		SELECT 		
		<include refid="columns" />
		FROM t_pay_payment_bill_history
		<include refid="where" />
		<if test="_orderby != null">ORDER BY ${_orderby}</if>
		<if test="_offset != null">LIMIT #{_offset},#{_limit}</if>	
	</select>
</mapper>