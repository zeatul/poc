<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hawk.ecom.sms.persist.mapper.MessageModelMapper">

	<sql id="columns">	
				id AS "id" ,
		sms_model_code AS "smsModelCode" ,
		sms_model_name AS "smsModelName" ,
		sms_model_content AS "smsModelContent" ,
		version AS "version" ,
		create_date AS "createDate" ,
		update_date AS "updateDate" ,
		delete_date AS "deleteDate" 
	</sql>
	
	<sql id="where">
		<trim prefix="WHERE" prefixOverrides="AND|OR">		 
			<if test="id != null"> AND id = #{id}  </if>
			<if test="smsModelCode != null"> AND sms_model_code = #{smsModelCode}  </if>
			<if test="smsModelName != null"> AND sms_model_name = #{smsModelName}  </if>
			<if test="smsModelContent != null"> AND sms_model_content = #{smsModelContent}  </if>
			<if test="version != null"> AND version = #{version}  </if>
			<if test="createDate != null"> AND create_date = #{createDate}  </if>
			<if test="updateDate != null"> AND update_date = #{updateDate}  </if>
			<if test="deleteDate != null"> AND delete_date = #{deleteDate}  </if>
		</trim>	
	</sql>
	
	<sql id="where_old">
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			AND id = #{old_id}
			AND sms_model_code = #{old_smsModelCode}
			AND sms_model_name = #{old_smsModelName}
			AND sms_model_content = #{old_smsModelContent}
			AND version = #{old_version}
			AND create_date = #{old_createDate}
			AND update_date = #{old_updateDate}
			AND delete_date = #{old_deleteDate}
		</trim>
	</sql>
	
	<sql id="update">
		<set>
			id = #{id},
			sms_model_code = #{smsModelCode},
			sms_model_name = #{smsModelName},
			sms_model_content = #{smsModelContent},
			version = #{version},
			create_date = #{createDate},
			update_date = #{updateDate},
			delete_date = #{deleteDate},
		</set>
	</sql>
	
	<sql id="updateWithoutNull">
		<set>
			<if test="id != null">id = #{id},</if>
			<if test="smsModelCode != null">sms_model_code = #{smsModelCode},</if>
			<if test="smsModelName != null">sms_model_name = #{smsModelName},</if>
			<if test="smsModelContent != null">sms_model_content = #{smsModelContent},</if>
			<if test="version != null">version = #{version},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="updateDate != null">update_date = #{updateDate},</if>
			<if test="deleteDate != null">delete_date = #{deleteDate},</if>
		</set>
	</sql>
	
	<sql id="pkwhere">
		<trim prefix="WHERE" prefixOverrides="AND">
			AND id = #{id}
		</trim>
	</sql>
	
	<select id="load"  resultType="MessageModelDomain">
		SELECT 
		<include refid="columns" />
		FROM t_sms_message_model
		<include refid="pkwhere" />		
	</select>
	
	<select id="loadDynamic" parameterType="hashmap" resultType="MessageModelDomain">
		SELECT 		
		<include refid="columns" />
		FROM t_sms_message_model
		<include refid="where" />
		<if test="_orderby != null">ORDER BY ${_orderby}</if>
	</select>

	<select id="count"  parameterType="hashmap" resultType="integer">
		SELECT count(1) 
		FROM t_sms_message_model
		<include refid="where" />
	</select>
	
	<select id="countByPK"  resultType="integer">
		SELECT count(1) 
		FROM t_sms_message_model
		<include refid="pkwhere" />		
	</select>
	
	<insert id="insert"  parameterType="MessageModelDomain">
		INSERT INTO t_sms_message_model (			
				id,				
				sms_model_code,				
				sms_model_name,				
				sms_model_content,				
				version,				
				create_date,				
				update_date,				
				delete_date				
		)		
		VALUES (	
			#{id},
			#{smsModelCode},
			#{smsModelName},
			#{smsModelContent},
			#{version},
			#{createDate},
			#{updateDate},
			#{deleteDate}
		) 
	</insert>
	
	<delete id="delete" >
		DELETE FROM t_sms_message_model
		<include refid="pkwhere" />	
	</delete>
	
	<delete id="deleteDynamic" parameterType="hashmap">
		DELETE FROM t_sms_message_model
		<include refid="where" />
	</delete>

	<update id="update" parameterType="MessageModelDomain">
		UPDATE t_sms_message_model	
		<include refid="update" />
		<include refid="pkwhere" />	
	</update>
	
	<update id="updateWithoutNull" parameterType="MessageModelDomain">
		UPDATE t_sms_message_model
		<include refid="updateWithoutNull"/>
		<include refid="pkwhere" />	
	</update>
	
	<update id="updateDynamic" parameterType="hashmap">
		UPDATE t_sms_message_model	
		<include refid="update" />
		<include refid="where_old" />
	</update>
	
	<select id="loadDynamicPaging" parameterType="hashmap" resultType="MessageModelDomain">
		SELECT 		
		<include refid="columns" />
		FROM t_sms_message_model
		<include refid="where" />
		<if test="_orderby != null">ORDER BY ${_orderby}</if>
		<if test="_offset != null">LIMIT #{_offset},#{_limit}</if>	
	</select>
</mapper>