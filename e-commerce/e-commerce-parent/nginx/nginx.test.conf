#使用的用户和组
#user  nobody;

#工作进程数
worker_processes  8;

#错误日志
#error_log  logs/error.log error;

#pid文件存放路径
#pid        logs/nginx.pid;

#指定文件描述符数量
worker_rlimit_nofile 51200;

events {
	#使用的网络IO模型
	use epoll;
	
	#允许的连接数
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';


	#记录404错误日志
	log_not_found on;

    access_log  logs/access.log  main;
    
    

    sendfile        on; 
    tcp_nopush     on;

	#连接保持时长
    keepalive_timeout  65;
    #超过这个时间的不活动连接，会被nginx关闭
    send_timeout 60;
    
    tcp_nodelay on;

	#开启gzip
    gzip  on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types text/plain application/json application/xml text/css application/x-javascript
    gzip_vary on;
    
    #合并斜线
    #merge_slashes on
    
    #允许客户端请求的最大单个文件字节数
    client_max_body_size 20m;
    
    #缓冲区代理缓冲用户端请求的最大字节数,可以理解为先保存到本地再传递给用户
    client_body_buffer_size 128k;
    
    #与后端服务器连接的超时时间
    proxy_connect_timeout 600;
    
    #连接成功后_等候后端服务器响应时间
    proxy_read_timeout 600;
    
    #后端服务器数据回传时间_规定时间内后端服务器必须传完所有数据
    proxy_send_timeout 600;
    
    #代理请求缓冲区_这个缓冲区见会保存用户的头信息以供nginx进行规制处理_一般只能保存下头信息即可
    proxy_buffer_size 16k;
    
    #同上 告诉Nginx保存单个用的几个Buffer 最大用多大空间
    proxy_buffers 4 32k;
    
    #如果系统很忙的时候,可以申请更大的proxy_buffers
    proxy_busy_buffers_size 64k;
    
    #proxy缓存临时文件的大小
    proxy_temp_file_write_size 64k;
    
    
    
    #图片
    upstream svp_web_pool{
    	server 210.73.195.72:8080 weight=4 max_fails=2 fail_timeout=30s;
    }
    
    
    
    

	
    server {
    	#监听
        listen	80;
        
        #主机名
        server_name  210.73.195.78 localhost 127.0.0.1;
		
		#字符集
        #charset utf-8;

		#自定义访问日志
        #access_log  logs/host.access.log  main buffer=32k;
        
        #全局默认页面
        index  index.html index.htm;
        
        #虚拟主机        
        location /html/ {
        	alias /usr/local/nginx/html/;
        	index index.html;
        	error_page 415 = /empty;
        }
        
        location = /empty {
        	empty_gif;
        }
        
        location / {
        	alias /usr/local/nginx/html/;
        	index index.html index.htm;
        	error_page 415 = /empty;
        }
        
#        location / {
#            root   html;
#           index  index.html index.htm;
#        }
        
        #反向代理 服务
        location /ecom/ {
        	proxy_pass http://svp_web_pool;
        	proxy_set_header Host $host;
        	proxy_set_header X-FORWARDED-FOR $remote_addr;
        }
       
        

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        } 

    }
    
    
     # HTTPS server    
    server {
       	listen       443 ssl;
        server_name  localhost 210.73.195.72;

        ssl_certificate      /usr/local/nginx/ssl/api.bz.crt ;
        ssl_certificate_key  /usr/local/nginx/ssl/api.bz_nopass.key;

        ssl_session_cache    shared:SSL:1m;
       	ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location /manager/ {
        	proxy_pass http://svp_web_pool;
        	proxy_set_header Host $host;
        	proxy_set_header X-FORWARDED-FOR $remote_addr;
        }
    }
    

}
