<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hawk.ecom.user.persist.mapper.LoginFailureMapper">

	<sql id="columns">	
				id AS "id" ,
		user_code AS "userCode" ,
		mobile_number AS "mobileNumber" ,
		create_date AS "createDate" ,
		update_date AS "updateDate" ,
		delete_date AS "deleteDate" 
	</sql>
	
	<sql id="where">
		<trim prefix="WHERE" prefixOverrides="AND|OR">		 
			<if test="id != null"> AND id = #{id}  </if>
			<if test="userCode != null"> AND user_code = #{userCode}  </if>
			<if test="mobileNumber != null"> AND mobile_number = #{mobileNumber}  </if>
			<if test="createDate != null"> AND create_date = #{createDate}  </if>
			<if test="updateDate != null"> AND update_date = #{updateDate}  </if>
			<if test="deleteDate != null"> AND delete_date = #{deleteDate}  </if>
		</trim>	
	</sql>
	
	<sql id="where_old">
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			AND id = #{old_id}
			AND user_code = #{old_userCode}
			AND mobile_number = #{old_mobileNumber}
			AND create_date = #{old_createDate}
			AND update_date = #{old_updateDate}
			AND delete_date = #{old_deleteDate}
		</trim>
	</sql>
	
	<sql id="update">
		<set>
			id = #{id},
			user_code = #{userCode},
			mobile_number = #{mobileNumber},
			create_date = #{createDate},
			update_date = #{updateDate},
			delete_date = #{deleteDate},
		</set>
	</sql>
	
	<sql id="updateWithoutNull">
		<set>
			<if test="id != null">id = #{id},</if>
			<if test="userCode != null">user_code = #{userCode},</if>
			<if test="mobileNumber != null">mobile_number = #{mobileNumber},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="updateDate != null">update_date = #{updateDate},</if>
			<if test="deleteDate != null">delete_date = #{deleteDate},</if>
		</set>
	</sql>
	
	<sql id="pkwhere">
		<trim prefix="WHERE" prefixOverrides="AND">
			AND id = #{id}
		</trim>
	</sql>
	
	<select id="load"  resultType="LoginFailureDomain">
		SELECT 
		<include refid="columns" />
		FROM t_usr_login_failure
		<include refid="pkwhere" />		
	</select>
	
	<select id="loadDynamic" parameterType="hashmap" resultType="LoginFailureDomain">
		SELECT 		
		<include refid="columns" />
		FROM t_usr_login_failure
		<include refid="where" />
		<if test="_orderby != null">ORDER BY ${_orderby}</if>
	</select>

	<select id="count"  parameterType="hashmap" resultType="integer">
		SELECT count(1) 
		FROM t_usr_login_failure
		<include refid="where" />
	</select>
	
	<select id="countByPK"  resultType="integer">
		SELECT count(1) 
		FROM t_usr_login_failure
		<include refid="pkwhere" />		
	</select>
	
	<insert id="insert"  parameterType="LoginFailureDomain">
		INSERT INTO t_usr_login_failure (			
				id,				
				user_code,				
				mobile_number,				
				create_date,				
				update_date,				
				delete_date				
		)		
		VALUES (	
			#{id},
			#{userCode},
			#{mobileNumber},
			#{createDate},
			#{updateDate},
			#{deleteDate}
		) 
	</insert>
	
	<delete id="delete" >
		DELETE FROM t_usr_login_failure
		<include refid="pkwhere" />	
	</delete>
	
	<delete id="deleteDynamic" parameterType="hashmap">
		DELETE FROM t_usr_login_failure
		<include refid="where" />
	</delete>

	<update id="update" parameterType="LoginFailureDomain">
		UPDATE t_usr_login_failure	
		<include refid="update" />
		<include refid="pkwhere" />	
	</update>
	
	<update id="updateWithoutNull" parameterType="LoginFailureDomain">
		UPDATE t_usr_login_failure
		<include refid="updateWithoutNull"/>
		<include refid="pkwhere" />	
	</update>
	
	<update id="updateDynamic" parameterType="hashmap">
		UPDATE t_usr_login_failure	
		<include refid="update" />
		<include refid="where_old" />
	</update>
	
	<select id="loadDynamicPaging" parameterType="hashmap" resultType="LoginFailureDomain">
		SELECT 		
		<include refid="columns" />
		FROM t_usr_login_failure
		<include refid="where" />
		<if test="_orderby != null">ORDER BY ${_orderby}</if>
		<if test="_offset != null">LIMIT #{_offset},#{_limit}</if>	
	</select>
</mapper>